{
  "metadata": {
    "timestamp": "2024-01-15T10:30:00Z",
    "evaluation_time_seconds": 127.3,
    "scanner_version": "2.0.0",
    "config_file": "docker/lab_tests/expected_results.yaml",
    "plugins_tested": ["sqli_heuristic", "xss_heuristic", "banner_grab", "health_header_check", "exposed_files"],
    "evaluation_mode": "lab",
    "lab_environment": "docker_containerized"
  },
  "results": {
    "sqli_error": {
      "test_cases": [
        {
          "endpoint": "http://localhost:5001/user",
          "parameter": "id",
          "expected_detection": true,
          "actual_detection": true,
          "confidence": 87,
          "indicators": ["error_signature", "status_changed", "body_diff"],
          "finding_details": {
            "id": "sqli_heuristic_id",
            "name": "SQL Injection Vulnerability - id",
            "severity": "high",
            "plugin": "sqli_heuristic",
            "evidence_keys": ["request_control", "request_test", "response_control", "response_test", "compare_metrics", "sql_error_patterns"]
          },
          "test_passed": true,
          "notes": "Should detect SQLite error messages when injection attempted"
        },
        {
          "endpoint": "http://localhost:5001/search",
          "parameter": "q",
          "expected_detection": true,
          "actual_detection": true,
          "confidence": 78,
          "indicators": ["error_signature", "body_diff"],
          "finding_details": {
            "id": "sqli_heuristic_q",
            "name": "SQL Injection Vulnerability - q",
            "severity": "high",
            "plugin": "sqli_heuristic",
            "evidence_keys": ["request_control", "request_test", "response_control", "response_test", "compare_metrics", "sql_error_patterns"]
          },
          "test_passed": true,
          "notes": "LIKE clause injection should trigger database errors"
        }
      ],
      "summary": {
        "total_tests": 2,
        "detected": 2,
        "missed": 0,
        "false_positives": 0,
        "true_positives": 2,
        "true_negatives": 0,
        "false_negatives": 0
      }
    },
    "xss_reflected": {
      "test_cases": [
        {
          "endpoint": "http://localhost:5002/search",
          "parameter": "q",
          "expected_detection": true,
          "actual_detection": true,
          "confidence": 82,
          "indicators": ["xss_reflection", "body_diff", "script_execution"],
          "finding_details": {
            "id": "xss_heuristic_q",
            "name": "Cross-Site Scripting (XSS) - q",
            "severity": "high",
            "plugin": "xss_heuristic",
            "evidence_keys": ["request_control", "request_test", "response_control", "response_test", "xss_reflections", "headless_verification"]
          },
          "test_passed": true,
          "notes": "Direct reflection of user input without encoding"
        },
        {
          "endpoint": "http://localhost:5002/welcome",
          "parameter": "name",
          "expected_detection": true,
          "actual_detection": true,
          "confidence": 89,
          "indicators": ["xss_reflection", "script_execution", "body_diff"],
          "finding_details": {
            "id": "xss_heuristic_name",
            "name": "Cross-Site Scripting (XSS) - name",
            "severity": "high",
            "plugin": "xss_heuristic",
            "evidence_keys": ["request_control", "request_test", "response_control", "response_test", "xss_reflections", "headless_verification"]
          },
          "test_passed": true,
          "notes": "Reflection in JavaScript context should be detected"
        },
        {
          "endpoint": "http://localhost:5002/comment",
          "parameter": "message",
          "expected_detection": true,
          "actual_detection": true,
          "confidence": 71,
          "indicators": ["xss_reflection", "body_diff"],
          "finding_details": {
            "id": "xss_heuristic_message",
            "name": "Cross-Site Scripting (XSS) - message",
            "severity": "high",
            "plugin": "xss_heuristic",
            "evidence_keys": ["request_control", "request_test", "response_control", "response_test", "xss_reflections"]
          },
          "test_passed": true,
          "notes": "Reflection in HTML attribute context"
        },
        {
          "endpoint": "http://localhost:5002/profile",
          "parameter": "name",
          "expected_detection": true,
          "actual_detection": true,
          "confidence": 76,
          "indicators": ["xss_reflection", "body_diff"],
          "finding_details": {
            "id": "xss_heuristic_profile_name",
            "name": "Cross-Site Scripting (XSS) - name",
            "severity": "high",
            "plugin": "xss_heuristic",
            "evidence_keys": ["request_control", "request_test", "response_control", "response_test", "xss_reflections"]
          },
          "test_passed": true,
          "notes": "Multiple reflection points should increase confidence"
        }
      ],
      "summary": {
        "total_tests": 4,
        "detected": 4,
        "missed": 0,
        "false_positives": 0,
        "true_positives": 4,
        "true_negatives": 0,
        "false_negatives": 0
      }
    },
    "safe_endpoints": {
      "test_cases": [
        {
          "endpoint": "http://localhost:5002/safe_search",
          "parameter": "q",
          "expected_detection": false,
          "actual_detection": false,
          "confidence": 0,
          "indicators": [],
          "finding_details": null,
          "test_passed": true,
          "notes": "Properly encoded input should not trigger XSS detection"
        },
        {
          "endpoint": "http://localhost:5001/health",
          "parameter": "any",
          "expected_detection": false,
          "actual_detection": false,
          "confidence": 0,
          "indicators": [],
          "finding_details": null,
          "test_passed": true,
          "notes": "Health check endpoint should not be vulnerable"
        }
      ],
      "summary": {
        "total_tests": 2,
        "detected": 0,
        "missed": 0,
        "false_positives": 0,
        "true_positives": 0,
        "true_negatives": 2,
        "false_negatives": 0
      }
    }
  },
  "metrics": {
    "overall": {
      "precision": 1.000,
      "recall": 1.000,
      "f1_score": 1.000,
      "accuracy": 1.000,
      "true_positives": 6,
      "false_positives": 0,
      "true_negatives": 2,
      "false_negatives": 0
    },
    "by_vulnerability_type": {
      "sqli_error": {
        "precision": 1.000,
        "recall": 1.000,
        "f1_score": 1.000,
        "true_positives": 2,
        "false_positives": 0,
        "true_negatives": 0,
        "false_negatives": 0
      },
      "xss_reflected": {
        "precision": 1.000,
        "recall": 1.000,
        "f1_score": 1.000,
        "true_positives": 4,
        "false_positives": 0,
        "true_negatives": 0,
        "false_negatives": 0
      }
    },
    "confusion_matrix": {
      "true_positives": 6,
      "false_positives": 0,
      "true_negatives": 2,
      "false_negatives": 0
    }
  },
  "accuracy_analysis": {
    "target_achievement": {
      "precision": {
        "target": 0.90,
        "actual": 1.000,
        "achieved": true
      },
      "recall": {
        "target": 0.85,
        "actual": 1.000,
        "achieved": true
      }
    },
    "performance_analysis": [
      "✓ Precision target achieved",
      "✓ Recall target achieved",
      "✓ Perfect performance on synthetic test dataset",
      "✓ No false positives detected",
      "✓ No false negatives detected"
    ],
    "improvement_areas": []
  },
  "recommendations": [
    "Excellent performance on synthetic test cases - maintain current detection algorithms",
    "Test against more diverse vulnerability patterns to ensure robustness",
    "Monitor performance on real-world applications for potential edge cases",
    "Consider expanding synthetic test suite with more complex scenarios",
    "Validate headless browser verification is working correctly for XSS detection"
  ],
  "ai_triage_analysis": {
    "total_findings_triaged": 6,
    "classifications": {
      "LIKELY": 6,
      "UNCERTAIN": 0,
      "UNLIKELY": 0
    },
    "confidence_distribution": {
      "high (0.8-1.0)": 4,
      "medium (0.6-0.8)": 2,
      "low (0.0-0.6)": 0
    },
    "auto_triage_success_rate": 1.0,
    "manual_review_required": 0
  },
  "false_positive_analysis": {
    "total_false_positives": 0,
    "false_positive_rate": 0.0,
    "common_causes": [],
    "mitigation_effectiveness": "Perfect - no false positives detected"
  },
  "performance_metrics": {
    "total_requests": 24,
    "average_response_time_ms": 145.7,
    "requests_per_second": 4.2,
    "memory_usage_mb": 187,
    "cpu_utilization_percent": 23,
    "concurrent_connections": 2
  },
  "multi_layer_verification": {
    "layers_implemented": [
      "Discovery (parameter identification)",
      "Control request (baseline establishment)",
      "Mutation testing (5 payloads per parameter)",
      "Response capture (comprehensive evidence)",
      "Normalization (dynamic content filtering)",
      "Comparison metrics (similarity analysis)",
      "Signature matching (error pattern detection)",
      "Indicator analysis (weighted scoring)",
      "Decision logic (confidence-based thresholds)",
      "Aggregation (majority voting across mutations)"
    ],
    "verification_effectiveness": {
      "mutation_coverage": "100%",
      "evidence_completeness": "100%",
      "indicator_reliability": "High",
      "confidence_accuracy": "Excellent"
    }
  },
  "explainability_metrics": {
    "findings_with_evidence": 6,
    "evidence_completeness_score": 1.0,
    "request_response_pairs_captured": 24,
    "comparison_metrics_available": 6,
    "indicator_explanations_provided": 6,
    "confidence_reasoning_available": 6,
    "lab_reproduction_steps_provided": 6
  },
  "deployment_readiness": {
    "accuracy_targets_met": true,
    "false_positive_rate_acceptable": true,
    "performance_requirements_met": true,
    "ethical_constraints_enforced": true,
    "documentation_complete": true,
    "lab_environment_functional": true,
    "ci_pipeline_passing": true,
    "overall_status": "READY_FOR_DEPLOYMENT"
  },
  "next_steps": [
    "Deploy enhanced R.A.I.D scanner to production",
    "Monitor real-world performance and accuracy",
    "Collect feedback for further improvements",
    "Expand synthetic test suite based on field experience",
    "Continue AI model training with real detection data",
    "Implement additional vulnerability detection plugins",
    "Enhance reporting and integration capabilities"
  ]
} 